// Generated by CoffeeScript 1.11.1
var Player;

Player = (function() {
  var digits;

  function Player(keys, x, y, w, h) {
    this.w = w;
    this.h = h;
    this.M = 120;
    this.N = 60;
    this.keys = keys;
    this.x = width * x / this.M;
    this.y = height * y / this.N;
    this.history = [3];
    this.target = 2;
    this.count = 0;
    this.level = 0;
    this.buttons = [];
    this.buttons.push(new Button(this, -10, -5, 7.5, 15, "", "3"));
    this.buttons.push(new Button(this, 10, -5, 7.5, 15, "", "2"));
    this.buttons.push(new Button(this, 0, -5, 7.5, 15, keys[0], "undo"));
    this.buttons.push(new Button(this, -10, 15, 7.5, 15, keys[1], "/2"));
    this.buttons.push(new Button(this, 0, 15, 7.5, 15, keys[2], "+2"));
    this.buttons.push(new Button(this, 10, 15, 7.5, 15, keys[3], "*2"));
  }

  Player.prototype.draw = function() {
    var button, j, len, ref;
    if (this.keys === "WASD") {
      if (this.target === this.top()) {
        fc(0, 1, 0);
      } else {
        fc(1, 1, 0);
      }
    } else {
      if (this.target === this.top()) {
        fc(0, 1, 0);
      } else {
        fc(1, 0, 0);
      }
    }
    rect(0, 0, width * this.w / this.M, height * this.h / this.N);
    this.buttons[0].txt = this.top().toString();
    this.buttons[1].txt = this.target.toString();
    ref = this.buttons;
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      button.draw();
    }
    textSize(height / 20);
    fc(0.5);
    return text(this.level - this.history.length + 1, 0, height * 0.45);
  };

  Player.prototype.process = function(key) {
    if (this.target === this.top()) {
      return;
    }
    if (key === this.keys[0] && this.history.length > 1) {
      this.history.pop();
    }
    if (key === this.keys[1] && this.top() % 2 === 0) {
      this.save(this.top() / 2);
    }
    if (key === this.keys[2]) {
      this.save(this.top() + 2);
    }
    if (key === this.keys[3]) {
      return this.save(this.top() * 2);
    }
  };

  Player.prototype.save = function(value) {
    var d, ms;
    this.count++;
    this.history.push(value);
    if (this.target === this.top()) {
      d = new Date();
      ms = d.getTime();
      return this.stopp = int(ms);
    }
  };

  Player.prototype.mousePressed = function() {
    var button, j, len, ref, results;
    ref = this.buttons;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      results.push(button.mousePressed());
    }
    return results;
  };

  Player.prototype.touchStarted = function(x, y) {
    var button, j, len, ref, results;
    ref = this.buttons;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      results.push(button.touchStarted(x, y));
    }
    return results;
  };

  Player.prototype.keyPressed = function(key) {
    var button, j, len, ref, results;
    ref = this.buttons;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      button = ref[j];
      results.push(button.keyPressed(key));
    }
    return results;
  };

  Player.prototype.score = function() {
    return (this.stopp - this.start) / 1000 + this.count * 10;
  };

  Player.prototype.top = function() {
    return this.history[this.history.length - 1];
  };

  Player.prototype.finished = function() {
    return this.top() === this.target;
  };

  Player.prototype.perfect = function(level) {
    return this.finished() && this.count <= level;
  };

  digits = function(x) {
    if (x < 100) {
      return x.toFixed(3);
    }
    if (x < 1000) {
      return x.toFixed(2);
    }
    if (x < 10000) {
      return x.toFixed(1);
    }
    return x.toFixed(0);
  };

  Player.prototype.result = function() {
    var H, dx, i, j, len, n, number, ref, results, x, x0, y;
    n = 20;
    if (this.stopp === 0) {
      return;
    }
    fill(this.color);
    H = height / n;
    textSize(H);
    if (this.keys === "WASD") {
      x0 = -width / 8;
      dx = -width / 8;
    } else {
      x0 = width / 8;
      dx = width / 8;
    }
    text(digits(this.score()), x0, -9.5 * H);
    ref = this.history;
    results = [];
    for (i = j = 0, len = ref.length; j < len; i = ++j) {
      number = ref[i];
      x = int(i / (n - 1));
      y = int(i % (n - 1));
      results.push(text(number, x0 + x * dx, -8.5 * H + y * H));
    }
    return results;
  };

  return Player;

})();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGxheWVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiUGxheWVyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQTs7QUFBTTtBQUVMLE1BQUE7O0VBQWEsZ0JBQUMsSUFBRCxFQUFNLENBQU4sRUFBUSxDQUFSLEVBQVUsQ0FBVixFQUFhLENBQWI7SUFBVSxJQUFDLENBQUEsSUFBRDtJQUFHLElBQUMsQ0FBQSxJQUFEO0lBQ3pCLElBQUMsQ0FBQSxDQUFELEdBQUs7SUFDTCxJQUFDLENBQUEsQ0FBRCxHQUFLO0lBQ0wsSUFBQyxDQUFBLElBQUQsR0FBUTtJQUNSLElBQUMsQ0FBQSxDQUFELEdBQUssS0FBQSxHQUFRLENBQVIsR0FBWSxJQUFDLENBQUE7SUFDbEIsSUFBQyxDQUFBLENBQUQsR0FBSyxNQUFBLEdBQVMsQ0FBVCxHQUFhLElBQUMsQ0FBQTtJQUNuQixJQUFDLENBQUEsT0FBRCxHQUFXLENBQUMsQ0FBRDtJQUNYLElBQUMsQ0FBQSxNQUFELEdBQVU7SUFDVixJQUFDLENBQUEsS0FBRCxHQUFTO0lBQ1QsSUFBQyxDQUFBLEtBQUQsR0FBUztJQUVULElBQUMsQ0FBQSxPQUFELEdBQVc7SUFDWCxJQUFDLENBQUEsT0FBTyxDQUFDLElBQVQsQ0FBa0IsSUFBQSxNQUFBLENBQU8sSUFBUCxFQUFTLENBQUMsRUFBVixFQUFjLENBQUMsQ0FBZixFQUFrQixHQUFsQixFQUF1QixFQUF2QixFQUEyQixFQUEzQixFQUE4QixHQUE5QixDQUFsQjtJQUNBLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBVCxDQUFrQixJQUFBLE1BQUEsQ0FBTyxJQUFQLEVBQVUsRUFBVixFQUFjLENBQUMsQ0FBZixFQUFrQixHQUFsQixFQUF1QixFQUF2QixFQUEyQixFQUEzQixFQUE4QixHQUE5QixDQUFsQjtJQUNBLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBVCxDQUFrQixJQUFBLE1BQUEsQ0FBTyxJQUFQLEVBQVcsQ0FBWCxFQUFjLENBQUMsQ0FB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QUFNO01BQ1gsRUFBQSxHQUFLLEtBQUEsR0FBTSxFQUxaOztJQU1BLElBQUEsQ0FBSyxNQUFBLENBQU8sSUFBQyxDQUFBLEtBQUQsQ0FBQSxDQUFQLENBQUwsRUFBdUIsRUFBdkIsRUFBMkIsQ0FBQyxHQUFELEdBQUssQ0FBaEM7QUFDQTtBQUFBO1NBQUEsNkNBQUE7O01BQ0MsQ0FBQSxHQUFJLEdBQUEsQ0FBSSxDQUFBLEdBQUksQ0FBQyxDQUFBLEdBQUUsQ0FBSCxDQUFSO01BQ0osQ0FBQSxHQUFJLEdBQUEsQ0FBSSxDQUFBLEdBQUksQ0FBQyxDQUFBLEdBQUUsQ0FBSCxDQUFSO21CQUNKLElBQUEsQ0FBSyxNQUFMLEVBQWEsRUFBQSxHQUFHLENBQUEsR0FBRSxFQUFsQixFQUFzQixDQUFDLEdBQUQsR0FBSyxDQUFMLEdBQVMsQ0FBQSxHQUFFLENBQWpDO0FBSEQ7O0VBZE8iLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBQbGF5ZXJcblxuXHRjb25zdHJ1Y3RvcjogKGtleXMseCx5LEB3LEBoKSAtPiAgIyBzaXh0aWVzXG5cdFx0QE0gPSAxMjBcblx0XHRATiA9IDYwXG5cdFx0QGtleXMgPSBrZXlzXG5cdFx0QHggPSB3aWR0aCAqIHggLyBATSAjIGNlbnRydW0gcGl4ZWxzXG5cdFx0QHkgPSBoZWlnaHQgKiB5IC8gQE4gIyBjZW50cnVtIHBpeGVsc1xuXHRcdEBoaXN0b3J5ID0gWzNdXG5cdFx0QHRhcmdldCA9IDJcblx0XHRAY291bnQgPSAwXG5cdFx0QGxldmVsID0gMFxuXG5cdFx0QGJ1dHRvbnMgPSBbXSAgICAgICAgICAgICAgIyB4ICAgeSAgIHcgICBoIChyZWxhdGl2dCBjZW50cnVtKVxuXHRcdEBidXR0b25zLnB1c2ggbmV3IEJ1dHRvbiBALC0xMCwgLTUsIDcuNSwgMTUsIFwiXCIsXCIzXCJcblx0XHRAYnV0dG9ucy5wdXNoIG5ldyBCdXR0b24gQCwgMTAsIC01LCA3LjUsIDE1LCBcIlwiLFwiMlwiXG5cdFx0QGJ1dHRvbnMucHVzaCBuZXcgQnV0dG9uIEAsICAwLCAtNSwgNy41LCAxNSwga2V5c1swXSxcInVuZG9cIlxuXHRcdEBidXR0b25zLnB1c2ggbmV3IEJ1dHRvbiBALC0xMCwgMTUsIDcuNSwgMTUsIGtleXNbMV0sXCIvMlwiXG5cdFx0QGJ1dHRvbnMucHVzaCBuZXcgQnV0dG9uIEAsICAwLCAxNSwgNy41LCAxNSwga2V5c1syXSxcIisyXCJcblx0XHRAYnV0dG9ucy5wdXNoIG5ldyBCdXR0b24gQCwgMTAsIDE1LCA3LjUsIDE1LCBrZXlzWzNdLFwiKjJcIlxuXG5cdGRyYXcgOiAtPlxuXHRcdGlmIEBrZXlzID09IFwiV0FTRFwiXG5cdFx0XHRpZiBAdGFyZ2V0PT1AdG9wKClcblx0XHRcdFx0ZmMgMCwxLDBcblx0XHRcdGVsc2Vcblx0XHRcdFx0ZmMgMSwxLDBcblx0XHRlbHNlXG5cdFx0XHRpZiBAdGFyZ2V0PT1AdG9wKClcblx0XHRcdFx0ZmMgMCwxLDBcblx0XHRcdGVsc2Vcblx0XHRcdFx0ZmMgMSwwLDBcblxuXHRcdHJlY3QgMCwwLCB3aWR0aCAqIEB3IC8gQE0sIGhlaWdodCAqIEBoIC8gQE4gXG5cdFx0QGJ1dHRvbnNbMF0udHh0ID0gQHRvcCgpLnRvU3RyaW5nKClcblx0XHRAYnV0dG9uc1sxXS50eHQgPSBAdGFyZ2V0LnRvU3RyaW5nKClcblx0XHRmb3IgYnV0dG9uIGluIEBidXR0b25zXG5cdFx0XHRidXR0b24uZHJhdygpXG5cdFx0dGV4dFNpemUgaGVpZ2h0LzIwXG5cdFx0ZmMgMC41XG5cdFx0dGV4dCBAbGV2ZWwgLSBAaGlzdG9yeS5sZW5ndGggKyAxLCAwLCBoZWlnaHQgKiAwLjQ1XG5cblx0cHJvY2VzcyA6IChrZXkpIC0+XG5cdFx0aWYgQHRhcmdldD09QHRvcCgpXG5cdFx0XHRyZXR1cm5cblx0XHRAaGlzdG9yeS5wb3AoKSBpZiBrZXk9PUBrZXlzWzBdIGFuZCBAaGlzdG9yeS5sZW5ndGg+MVxuXHRcdEBzYXZlKEB0b3AoKSAvIDIpIGlmIGtleT09QGtleXNbMV0gYW5kIEB0b3AoKSUyPT0wXG5cdFx0QHNhdmUoQHRvcCgpICsgMikgaWYga2V5PT1Aa2V5c1syXSBcblx0XHRAc2F2ZShAdG9wKCkgKiAyKSBpZiBrZXk9PUBrZXlzWzNdXG5cblx0c2F2ZSA6ICh2YWx1ZSkgLT5cblx0XHRAY291bnQrK1xuXHRcdEBoaXN0b3J5LnB1c2ggdmFsdWVcblx0XHRpZiBAdGFyZ2V0PT1AdG9wKClcblx0XHRcdGQgPSBuZXcgRGF0ZSgpXG5cdFx0XHRtcyA9IGQuZ2V0VGltZSgpXG5cdFx0XHRAc3RvcHAgPSBpbnQgbXMgXG5cblx0bW91c2VQcmVzc2VkIDogLT4gYnV0dG9uLm1vdXNlUHJlc3NlZCgpIGZvciBidXR0b24gaW4gQGJ1dHRvbnMgXG5cdHRvdWNoU3RhcnRlZCA6ICh4LHkpIC0+IGJ1dHRvbi50b3VjaFN0YXJ0ZWQoeCx5KSBmb3IgYnV0dG9uIGluIEBidXR0b25zIFxuXHRrZXlQcmVzc2VkIDogKGtleSkgLT4gYnV0dG9uLmtleVByZXNzZWQoa2V5KSBmb3IgYnV0dG9uIGluIEBidXR0b25zXG5cblx0c2NvcmUgOiAtPiAoQHN0b3BwIC0gQHN0YXJ0KS8xMDAwICsgQGNvdW50ICogMTAgXG5cdHRvcCA6IC0+IEBoaXN0b3J5W0BoaXN0b3J5Lmxlbmd0aC0xXVxuXHRmaW5pc2hlZCA6IC0+IEB0b3AoKSA9PSBAdGFyZ2V0XHRcdFxuXHRwZXJmZWN0IDogKGxldmVsKSAtPiBAZmluaXNoZWQoKSBhbmQgQGNvdW50IDw9IGxldmVsXG5cblx0ZGlnaXRzID0gKHgpIC0+XG5cdFx0cmV0dXJuIHgudG9GaXhlZCgzKSBpZiB4PDEwMFxuXHRcdHJldHVybiB4LnRvRml4ZWQoMikgaWYgeDwxMDAwXG5cdFx0cmV0dXJuIHgudG9GaXhlZCgxKSBpZiB4PDEwMDAwXG5cdFx0cmV0dXJuIHgudG9GaXhlZCgwKVxuXG5cdHJlc3VsdCA6KCkgLT5cblx0XHRuID0gMjBcblx0XHRpZiBAc3RvcHAgPT0gMFxuXHRcdFx0cmV0dXJuXG5cdFx0ZmlsbCBAY29sb3Jcblx0XHRIID0gaGVpZ2h0IC8gblxuXHRcdHRleHRTaXplIEhcblx0XHRpZiBAa2V5cz09XCJXQVNEXCIgIyBsZWZ0XG5cdFx0XHR4MCA9IC13aWR0aC84XG5cdFx0XHRkeCA9IC13aWR0aC84XG5cdFx0ZWxzZVxuXHRcdFx0eDAgPSB3aWR0aC84XG5cdFx0XHRkeCA9IHdpZHRoLzhcblx0XHR0ZXh0IGRpZ2l0cyhAc2NvcmUoKSksIHgwLCAtOS41KkggXG5cdFx0Zm9yIG51bWJlcixpIGluIEBoaXN0b3J5XG5cdFx0XHR4ID0gaW50IGkgLyAobi0xKVxuXHRcdFx0eSA9IGludCBpICUgKG4tMSlcblx0XHRcdHRleHQgbnVtYmVyLCB4MCt4KmR4LCAtOC41KkggKyB5KkhcbiJdfQ==
//# sourceURL=C:\github\Shortcut\www\Player.coffee